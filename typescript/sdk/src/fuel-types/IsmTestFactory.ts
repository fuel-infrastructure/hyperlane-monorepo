/* Autogenerated file. Do not edit manually. */

/*
  Fuels version: 0.100.1
*/
import {
  ContractFactory as __ContractFactory,
  decompressBytecode,
} from 'fuels';
import type { Account, DeployContractOptions, Provider } from 'fuels';

import { IsmTest } from './IsmTest.js';

const bytecode = decompressBytecode(
  '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',
);

export class IsmTestFactory extends __ContractFactory<IsmTest> {
  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, IsmTest.abi, accountOrProvider, IsmTest.storageSlots);
  }

  static deploy(wallet: Account, options: DeployContractOptions = {}) {
    const factory = new IsmTestFactory(wallet);
    return factory.deploy(options);
  }
}
